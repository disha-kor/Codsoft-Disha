import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

test = pd.read_csv('fraudTest.csv')
train = pd.read_csv('fraudTrain.csv')

credit_card_data = pd.concat([test, train])


credit_card_data.head()

credit_card_data.tail()

credit_card_data.info()

credit_card_data.isnull().sum()

class_column_name = 'is_fraud'

credit_card_data[class_column_name].value_counts()

legit = credit_card_data[credit_card_data[class_column_name] == 0]
fraud = credit_card_data[credit_card_data[class_column_name] == 1]

print(legit.shape)
print(fraud.shape)

legit['amt'].describe()

fraud['amt'].describe()

numeric_columns = credit_card_data.select_dtypes(include=[np.number]).columns

credit_card_data.groupby(class_column_name)[numeric_columns].mean()

legit_sample = legit.sample(n=492)

new_dataset = pd.concat([legit_sample, fraud], axis=0)

new_dataset.head()

new_dataset.tail()

new_dataset[class_column_name].value_counts()

new_dataset.groupby(class_column_name)[numeric_columns].mean()

Splitting the data into Features & Targets

X = new_dataset.drop(columns=class_column_name, axis=1)
Y = new_dataset[class_column_name]

print(X)

print(X.head())

print(Y)

print(Y.head())

X = X.select_dtypes(include=[np.number])

X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, stratify=Y, random_state=2)

print(X.shape, X_train.shape, X_test.shape)

model = LogisticRegression(max_iter=1000)

model.fit(X_train, Y_train)

X_train_prediction = model.predict(X_train)
training_data_accuracy = accuracy_score(X_train_prediction, Y_train)

print('Accuracy on Training data : ', training_data_accuracy)

X_test_prediction = model.predict(X_test)
test_data_accuracy = accuracy_score(X_test_prediction, Y_test)

print('Accuracy score on Test Data : ', test_data_accuracy)
